/* Import the 'Poppins' font from Google Fonts */
@import url('https://fonts.googleapis.com/css?family=Poppins:200i,400&display=swap');

/* Define custom CSS variables using :root */
:root {
  --color-white: #f3f3f3; /* Define a white color variable */
  --color-darkblue: #1b1b32; /* Define a dark blue color variable */
  --color-darkblue-alpha: rgba(27, 27, 50, 0.8); /* Define a dark blue with alpha transparency */
  --color-green: #37af65; /* Define a green color variable */
}

/* Apply a box-sizing rule to all elements */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Define styles for the body element */
body {
  font-family: 'Poppins', sans-serif; /* Use the 'Poppins' font */
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.4;
  color: var(--color-white); /* Set text color using the white variable */
  margin: 0;
}

/* Create a background gradient with a fixed position image */
body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  background: var(--color-darkblue); /* Use the dark blue color */
  background-image: linear-gradient(
      115deg,
      rgba(28, 28, 128, 0.8), /* Darker purple */
      rgba(106, 106, 186, 0.7)
    ),
    url(pic.jpg); 
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

/* Define styles for headings */
h1 {
  font-weight: 400;
  line-height: 1.2;
}

/* Define styles for paragraphs */
p {
  font-size: 1.125rem;
}

/* Apply margin styles for headings and paragraphs */
h1,
p {
  margin-top: 0;
  margin-bottom: 0.5rem;
}

/* Define styles for labels */
label {
  display: flex;
  align-items: center;
  font-size: 1.125rem;
  margin-bottom: 0.5rem;
}

/* Apply styles to form controls */
input,
button,
select,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

/* Define styles for buttons */
button {
  border: none;
}

/* Define styles for the container */
.container {
  width: 100%;
  margin: 3.125rem auto 0 auto;
}

/* Apply responsive styles to the container */
@media (min-width: 576px) {
  .container {
    max-width: 540px;
  }
}

/* Additional responsive styles for larger screens */
@media (min-width: 768px) {
  .container {
    max-width: 720px;
  }
}

/* Define styles for the header */
.header {
  padding: 0 0.625rem;
  margin-bottom: 1.875rem;
}

/* Define styles for description text */
.description {
  font-style: italic;
  font-weight: 200;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);
}

/* Define styles for clues */
.clue {
  margin-left: 0.25rem;
  font-size: 0.9rem;
  color: #e4e4e4;
}

/* Center-align text */
.text-center {
  text-align: center;
}

/* Form styles */
form {
  background: var(--color-darkblue-alpha); /* Use dark blue with alpha transparency */
  padding: 2.5rem 0.625rem;
  border-radius: 0.25rem;
}

/* Responsive form styles */
@media (min-width: 480px) {
  form {
    padding: 2.5rem;
  }
}

/* Define styles for form groups */
.form-group {
  margin: 0 auto 1.25rem auto;
  padding: 0.25rem;
}

/* Define styles for form controls */
.form-control {
  display: block;
  width: 100%;
  height: 2.375rem;
  padding: 0.375rem 0.75rem;
  color: #495057;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

/* Styles for focused form controls */
.form-control:focus {
  border-color: #80bdff;
  outline: 0;
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

/* Styles for radio and checkbox inputs */
.input-radio,
.input-checkbox {
  display: inline-block;
  margin-right: 0.625rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
}

/* Define styles for textareas */
.input-textarea {
  min-height: 120px;
  width: 100%;
  padding: 0.625rem;
  resize: vertical;
}

/* Define styles for submit button */
.submit-button {
  display: block;
  width: 100%;
  padding: 0.75rem;
  background: var(--color-green); /* Use the green color */
  color: inherit;
  border-radius: 2px;
  cursor: pointer;
}
